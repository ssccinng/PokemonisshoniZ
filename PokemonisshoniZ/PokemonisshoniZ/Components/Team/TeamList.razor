@using Microsoft.AspNetCore.Identity
@using PokemonisshoniZ.Data

@attribute [Authorize]

@inject UserManager<ApplicationUser> userManager
@inject DialogService DialogService
@inject NotificationService NotificationService
@inject NavigationManager NavigationManager

@rendermode @(new InteractiveServerRenderMode(prerender: false))


@inject ApplicationDbContext _context
@inject AuthenticationStateProvider AuthenticationStateProvider

<RadzenTabs @bind-SelectedIndex=editIdx>
    <Tabs>
        <RadzenTabsItem Text="队伍列表">
            <RadzenRow AlignItems="AlignItems.Center">
                <RadzenColumn Size="12">



                    <RadzenRow>
                        <RadzenButton Text="新建队伍" Click="@OnAddTeam" Style="width:150px;" />

                        <RadzenDropDown Style="" @bind-Value="@propStyle"
                                        Data=@(new DataItem[] { new DataItem("默认排序", 0),new DataItem("修改时间", 1),new DataItem("我喜爱的队伍", 2), })
                                        ValueProperty="Value" TextProperty="name"></RadzenDropDown>
                        <RadzenSwitch @bind-Value="@tooSimple" Style="margin-left:5px; margin-top:5px" />
                        <RadzenText TextStyle="TextStyle.Subtitle1" Style="margin-top:3px">简易显示</RadzenText>
                    </RadzenRow>
                </RadzenColumn>
                <RadzenColumn Size="12">
                    @{
                        IEnumerable<PokeTeam> teamListShow = teamList;

                    }
                    @if (tooSimple)
                    {

                    }
                    else
                    {
                        <RadzenDataList WrapItems="true"
                                        Data="teamListShow"
                                        TItem="PokeTeam"
                                        PageSize="100" AllowPaging="true">
                            <Template>
                                <RadzenRow class="w-100" JustifyContent="JustifyContent.Center"
                                AlignItems="AlignItems.Center">
                                    <RadzenColumn Size="12" SizeLG="1">
                                        <RadzenText>@context.Name</RadzenText>

                                    </RadzenColumn>

                                    <RadzenColumn Size="12" SizeLG="8">
                                        <RadzenRow>
                                            @foreach (var poke in context.PokemonIds)
                                            {
                                                <RadzenColumn Size="12" SizeLG="2" SizeMD="4" SizeSM="6">
                                                    <PokemonisshoniZ.Components.Common.PokeImg PokeId="poke" />

                                                </RadzenColumn>
                                            }
                                        </RadzenRow>
                                    </RadzenColumn>
                                    <RadzenColumn Size="12" SizeLG="2">
                                        <RadzenStack Orientation="Orientation.Horizontal">
                                            <RadzenButton Icon="edit" Size="ButtonSize.Small" Click="@(args =>OnOpenTeam(context))"></RadzenButton>
                                            <RadzenButton Icon="close" Size="ButtonSize.Small" Click="@(args =>OnDeleteTeam(context))"></RadzenButton>

                                        </RadzenStack>

                                    </RadzenColumn>

                                </RadzenRow>

                            </Template>
                        </RadzenDataList>
                    }
                </RadzenColumn>

            </RadzenRow>
        </RadzenTabsItem>

        @foreach (var team in editTeamlist)
        {
            <RadzenTabsItem Text=@(team.Name + " 队伍")>
                <RadzenButton Icon="close" Text="关闭" Click="@(args =>OnCloseTeam(team))" ButtonStyle="ButtonStyle.Danger" Style="width:100%; margin-top:2px"></RadzenButton>
                <TeamEditor @key="@team" Team="@team"></TeamEditor>
            </RadzenTabsItem>
        }
    </Tabs>
</RadzenTabs>

@code {
    int propStyle;

    // 是否显示简易版队伍
    bool tooSimple = false;

    List<PokeTeam> teamList;
    List<PokeTeam> editTeamlist = [];

    string userId;

    int editIdx = 0;


    protected override async Task OnInitializedAsync()
    {

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        // 是否为null return
        userId = authState.User.GetUserIdBlazor();

        teamList = _context.PokeTeams.Where(s => s.UserId == userId)
        .OrderByDescending(s => s.Id).ToList();
        await base.OnInitializedAsync();

    }


    void ShowNotification(NotificationMessage message)
    {
        NotificationService.Notify(message);

    }

    void OnCloseTeam(PokeTeam team)
    {
        editTeamlist.Remove(team);
        editIdx = 0;
    }
    void OnOpenTeam(PokeTeam team)
    {
        editTeamlist.Add(team);
        editIdx = editTeamlist.Count;
    }

    void OnDeleteTeam(PokeTeam team)
    {
        if (editTeamlist.Contains(team))
        {
            editTeamlist.Remove(team);
            editIdx = 0;

        }
        teamList.Remove(team);
        _context.PokeTeams.Remove(team);
        _context.SaveChanges();

    }

    void OnAddTeam()
    {
        if (editTeamlist.Count() >= 5)
        {
            ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "请关闭一些队伍！", Detail = "", Duration = 4000 });
            return;
        }

        if (teamList.Count() >= 50000)
        {
            ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "创建失败", Detail = "由于服务器资源有限目前只支持创建50000个队伍", Duration = 4000 });
            return;
        }
        PokeTeam pokeTeam = new PokeTeam
            {
                UserId = userId
            };
        _context.PokeTeams.Add(pokeTeam);
        pokeTeam.Name = "未命名" + (teamList.Count() + 1);
        // 提取一下
        _context.SaveChanges();
        teamList.Insert(0, pokeTeam);
        editTeamlist.Add(pokeTeam);
        editIdx = editTeamlist.Count();
    }

    public record DataItem(string Name, int Value);

}
