@page "/PokemonBox"

@using PokemonDataAccess.Models
@using PokemonisshoniZ.Data
@using PokemonisshoniZ.Meditor.Commands

@inject ContextMenuService ContextMenuService

@inject AuthenticationStateProvider AuthenticationStateProvider

@attribute [StreamRendering(false)]
@rendermode InteractiveServer
@attribute [Authorize]

@inject ApplicationDbContext _context
@inject PokemonisshoniZ.Services.PokemonisshoniService PokemonisshoniService

@if (_pCLPokemonBoxes != null && _pCLPokemonBoxes.Count != 0)
{
    

<RadzenRow>
    <RadzenColumn Size="12">
        <RadzenRow>
            <RadzenColumn Size="12" SizeMD="1">
                <RadzenButton Icon="keyboard_arrow_left" class="w-100"></RadzenButton>
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="10" class="text-center px-lg-5 px-0">
                <RadzenDropDown Data="@_pCLPokemonBoxes" 
                    ValueProperty="BoxIdx" TextProperty="Name" @bind-Value="selectIdx"
                class="text-center w-100">

                </RadzenDropDown>
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="1">
                <RadzenButton Icon="keyboard_arrow_right" class="w-100"></RadzenButton>

            </RadzenColumn>
        </RadzenRow>

    </RadzenColumn>
    <RadzenColumn Size="12">

     <RadzenRow>
            <RadzenColumn Size="0" SizeLG="1"></RadzenColumn>
        <RadzenColumn SizeLG="10" Size="12">
                    <RadzenCard class="mt-3">
                    <RadzenRow>
                        @foreach (var id in _pCLPokemonBoxes[selectIdx].PCLPokemonIds) {
                            <RadzenColumn 
                                SizeLG="2"
                                SizeMD="3"
                                Size="12"
                                >
                                @* 此处不能超过外侧高度 撕烤 *@
                                    <PokemonButton 
                                        
                                        ContextMenu="(args) => {ShowContextMenuWithItems(args, id);}"> </PokemonButton>
                            </RadzenColumn>
                        }
                    </RadzenRow>

                    </RadzenCard>
            
        </RadzenColumn>
        <RadzenColumn Size="0" SizeLG="1"></RadzenColumn>

    </RadzenRow>
   </RadzenColumn>
    </RadzenRow>

}
else
{
    <LoadPage/>
}
@code {
    string[] boxes = Enumerable.Range(1, 30).Select(s => $"箱子{s}").ToArray();
    int selectIdx = 0;

    List<PCLPokemonBox> _pCLPokemonBoxes;

    Pokemon[] _pokemons;

    // IEnumerable<DataItem> 
    [CascadingParameter]
    public HttpContext HttpContext { get; set; } = default!;

    string? userId;

    protected override async Task OnInitializedAsync()
    {
        // Httpcontext???
        var cc = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        userId = cc?.User.GetUserIdBlazor();
        if (userId == null)
        {
            // 无权限desu
            return;
        }
        _pCLPokemonBoxes = _context.PCLPokemonBoxes
        .Where(s => s.UserId == userId)
        .ToList();

        _pokemons = await PokemonisshoniService.PokeCommonService.GetPokemons();

        if (_pCLPokemonBoxes.Count == 0)
        {
            _pCLPokemonBoxes.AddRange(
                await PokemonisshoniService.Mediator.Send(new CreatePokemonBoxCommand(userId, 8)));

        }

        // await base.OnInitializedAsync();
    }
    // 要加入当前id 用于判断宝是否喜爱
    void ShowContextMenuWithItems(MouseEventArgs args, long id)
    {
        ContextMenuService.Open(args,
            new List<ContextMenuItem> {
                new ContextMenuItem(){ Text = "复制", Value = 1, Icon = "search" },
                new ContextMenuItem(){ Text = "放生", Value = 2, Icon = "delete" },
                new ContextMenuItem(){ Text = "标记为喜爱", Value = 2, Icon = "delete" },
                new ContextMenuItem(){ Text = "导出PS", Value = 3, Icon = "delete" },
                new ContextMenuItem(){ Text = "导入PS", Value = 4, Icon = "delete" },
                 }, OnMenuItemClick);
    }

    void OnMenuItemClick(MenuItemEventArgs args)
    {
        if ((int)args.Value == 1)
        {

        }
    }

    public record DataItem(string Name, int Idx);
}
